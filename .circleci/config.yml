version: 2.1

orbs:
  codacy: codacy/base@2.9.3
  codacy_plugins_test: codacy/plugins-test@0.10.6

jobs:
  e2e_test:
    machine:
      image: ubuntu-1604:201903-01
    resource_class: xlarge
    working_directory: ~/workdir/
    steps:
      - run:
          name: Prepare the machine
          command: |
            sudo apt update && sudo apt install nfs-common -y
            echo "debug -1"
            sudo snap install microk8s --classic --channel=1.15/stable
            echo "debug 0"
            sudo usermod -a -G microk8s $USER
            echo "debug -"
            sudo su - $USER
            echo "debug 1"
            sudo -i -u $USER echo "--allow-privileged=true" >> /var/snap/microk8s/current/args/kube-apiserver
            echo "debug 2"
            sudo -i -u $USER microk8s.enable dns
            echo "debug 3"
            sudo -i -u $USER microk8s.enable storage
            echo "debug 4"
            sudo -i -u $USER microk8s.enable ingress
            echo "debug 5"
            sudo -i -u $USER microk8s.stop
            echo "debug 6"
            sudo -i -u $USER microk8s.start
            echo "debug 7"
            sudo -i -u $USER microk8s.status --wait-ready --timeout 300

workflows:
  version: 2
  compile_test_deploy:
    jobs:
      - codacy/checkout_and_version:
          write_sbt_version: true
      - e2e_test:
          requires:
            - codacy/checkout_and_version          
      # - codacy/sbt:
      #     name: populate_cache
      #     persist_to_workspace: true
      #     cmd: sbt ";set scalafmtUseIvy in ThisBuild := false;update"
      #     requires:
      #       - codacy/checkout_and_version
      # - codacy/sbt:
      #     name: check_fmt
      #     cmd: sbt scalafmt::test test:scalafmt::test sbt:scalafmt::test
      #     requires:
      #       - populate_cache
      # - codacy/sbt:
      #     name: compile
      #     persist_to_workspace: true
      #     cmd: sbt compile
      #     requires:
      #       - populate_cache
      # - codacy/sbt:
      #     name: test_and_coverage
      #     cmd: |
      #       sbt coverage test coverageReport
      #       sbt coverageAggregate
      #       bash <(curl -Ls https://coverage.codacy.com/get.sh) report --skip
      #     requires:
      #       - compile
      # - codacy/sbt:
      #     name: package_artifacts
      #     persist_to_workspace: true
      #     cmd: |
      #       sbt "graalvm-native-image:packageBin"
      #       sbt "assembly"

      #       mkdir -p ~/workdir/artifacts/
      #       mv target/scala-2.13/codacy-clang-tidy-assembly-$(cat .version).jar ~/workdir/artifacts/codacy-clang-tidy-$(cat .version).jar
      #       mv target/graalvm-native-image/codacy-clang-tidy ~/workdir/artifacts/codacy-clang-tidy-$(cat .version)
      #     requires:
      #       - check_fmt
      #       - test_and_coverage
      # - codacy/shell:
      #     name: docker_publish_local
      #     cmd: |
      #       docker build -t codacy-clang-tidy .
      #       docker save --output docker-image.tar $CIRCLE_PROJECT_REPONAME:latest
      #     persist_to_workspace: true
      #     requires:
      #       - package_artifacts
      # - codacy_plugins_test/run:
      #     name: plugins_test
      #     run_pattern_tests: false
      #     requires:
      #       - docker_publish_local
      # - codacy/publish_docker:
      #     name: publish_dockerhub
      #     filters:
      #       branches:
      #         only:
      #           - master
      #     context: CodacyAWS
      #     requires:
      #       - plugins_test
      # - codacy/publish_ghr:
      #     name: publish_ghr
      #     path: ~/workdir/artifacts/
      #     filters:
      #       branches:
      #         only:
      #           - master
      #     context: CodacyGitHub
      #     requires:
      #       - plugins_test
